name: 🚀 CI/CD for Spring Boot with Docker on EC2

on:
  push:
    branches:
      - local
      - qa
      - real

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: ✅Checkout
      uses: actions/checkout@v4

    - name: 💌Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: ⭕Grant execute permission for gradlew
      run: chmod +x gradlew
      shell: bash

    - name: 🔺Build with Gradle
      run: ./gradlew clean build -x test
      shell: bash

    # 환경에 따라 다른 docker-compose 파일 사용
    - name: 🌎 SSH into EC2 and deploy
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # 디렉토리 변경
          cd /home/ubuntu/docker_setup

          # MySQL 실행
          docker-compose -f docker-compose-mysql.yml up -d
          
          # 현재 브랜치에 따라 Docker 이미지 빌드
          if [ "${{ github.ref }}" == "refs/heads/local" ]; then
            docker build -t myspring_img_local . --no-cache
            docker-compose -f docker-compose.yml -f docker-compose.local.yml --env-file .env.local -p local down
            docker-compose -f docker-compose.yml -f docker-compose.local.yml --env-file .env.local -p local up -d
          elif [ "${{ github.ref }}" == "refs/heads/qa" ]; then
            docker build -t myspring_img_qa . --no-cache
            docker-compose -f docker-compose.yml -f docker-compose.qa.yml --env-file .env.qa -p qa down
            docker-compose -f docker-compose.yml -f docker-compose.qa.yml --env-file .env.qa -p qa up -d
          elif [ "${{ github.ref }}" == "refs/heads/real" ]; then
            docker build -t myspring_img_real . --no-cache
            docker-compose -f docker-compose.yml -f docker-compose.real.yml --env-file .env.real -p real down
            docker-compose -f docker-compose.yml -f docker-compose.real.yml --env-file .env.real -p real up -d
          fi
